---
title: "MS3"
format: 
  html:
    theme: flatly
    toc: true
    toc-depth: 3
    toc-expand: 3
    toc-title: Contents
    smooth-scroll: true
editor: visual
params:
  organism: mouse
---

```{r}
#| label: setup
#| echo: false

knitr::opts_chunk$set(fig.align = 'center')
# orange = #FF681E
# purple = #5A2A82
# green = #5DB7B1
# grey = #7C7C7C
# black = #1B2944
```

# Data retrieval

## PTMs

### Original data

```{r}
#| echo: false
#| label: data_load

library(kableExtra)
setwd("/Users/anastasialinchik/Desktop/Thesis/thesis")
mouse_df <- read.csv(file = "allPTMs-Mouse.csv", header = T)
kable(head(mouse_df))
```

This is a table of various types of modifications in the dataset:

```{r}
#| echo: false
#| message: false
library(dplyr)
library(tidyr)
library(ggplot2)


#names(mouse_df)

kable(mouse_df %>% distinct(ptm_class))
```

The exact chemical modification:

```{r}
#| echo: false
kable(head(mouse_df %>% distinct(ptm_name)))
```

The dimensions of the original database are `r dim(mouse_df)`

### Selecting post-translational modifications

First step is to filter by `Post-translational`

```{r}
#| echo: false
#| label: PTMs
#| warning: false

mouse_ptms <- mouse_df %>% filter(ptm_class == "Post-translational")

```

After filtering out all of the other modifications the final dimensions of the dataframe are `r dim(mouse_ptms)`

### Basic statistics (only for post-translational modifications)

```{r}
#| echo: false
unique_project <-mouse_ptms %>% distinct(project_id)
unique_proteins <-mouse_ptms %>% distinct(LeadProt)
unique_ptms <-mouse_ptms %>% distinct(ptm_name)
```

-   There are `r dim(unique_project)[1]` projects that are related to mouse post-translational modifications.
-   There are `r dim(unique_proteins)[1]` unique proteins that were investigated.
-   There are `r dim(unique_ptms)[1]` unique PTMs

## Protein half-lives

Protein half-lives were used as a measure of protein turnover rates. There is no overall database with all of the protein half-lives, therefore the data was found in different papers.

The half-lives of mouse proteins were downloaded from the MassIVE repository under the accession number MSV000086426. The specific file used has the name `f.MSV000086426/updates/2021-02-12_zrolfs_27ac70a9/other/ResultFiles/AC_Results/AC_ProteinTurnoverResults.tsv`. It can be downloaded [here](https://massive.ucsd.edu/ProteoSAFe/dataset_files.jsp?task=5abc07078a064836827606e5455b8587#%7B%22table_sort_history%22%3A%22main.collection_asc%22%7D).

```{r}
#| label: half-lives
#| echo: false 
#| warning: false #The warnings can be ignored because they are for other columns. 

library(readxl)

half_lives_mice <- read.csv(file = 'mouse_half_lives.tsv', header = T, sep = "\t") %>% separate_rows(Protein, sep = ";") %>% select(Protein, Half.Life)
# some of the proteins have the same half lives and they are listed together
names(half_lives_mice) <- c("UniProtID", "half_life")

# some of the proteins have several estimates of half lives
half_lives_mice <- half_lives_mice %>%
  group_by(UniProtID) %>%
  summarise(mean_half_life = mean(half_life)) %>%
  arrange(desc(mean_half_life))

kable(head(half_lives_mice), align = c('c', 'c'), "html")
```

Matching protein half-lives and PTMs based on the UniProtID. The entries for which no half lives were found, will be removed. The dimensions before adding half-lives (filtered for `post-translational`): `r dim(mouse_ptms)`

```{r}
#| label: join
#| echo: false

mouse_ptms_with_hl <- inner_join(mouse_ptms, half_lives_mice, by = c("LeadProt" = "UniProtID")) 

kable(head(mouse_ptms_with_hl))
```

The dimensions after adding half-lives: `r dim(mouse_ptms_with_hl)`.

# Visualisations

## Distribution of types of post-translational modifications

```{r}
#| echo: false
mouse_ptms_with_hl_grouped_bm <- mouse_ptms_with_hl %>% 
  group_by(ptm_name) %>%
  summarise(total_counts = sum(total_counts), mean_half_life = mean(mean_half_life))
  
ggplot(mouse_ptms_with_hl_grouped_bm, aes(x = ptm_name, y = total_counts)) +
  geom_bar(stat = "identity", fill = "#5DB7B1", color = 'black') +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 5))
```

Total counts are the number of times that this modification was detected across all projects. This label is way too small therefore the dataframe was filtered to only include PTMs with a total count above 50,000.

```{r}
#| echo: false
mouse_ptms_with_hl_grouped_bm_high <- mouse_ptms_with_hl_grouped_bm %>%
  filter(total_counts>25000)

ggplot(mouse_ptms_with_hl_grouped_bm_high, aes(x = ptm_name, y = total_counts)) +
  geom_bar(stat = "identity", fill = "#5DB7B1", color = 'black') +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 12))
```

## Distribution of protein half-lives

```{r}
#| label: oxidation
#| echo: false
#| warning: false

mouse_ptms_with_hl_oxi_grouped_bp <- mouse_ptms_with_hl %>% 
  filter(ptm_name == '[35]Oxidation') %>%
  group_by(LeadProt) %>%
  summarise(total_counts = sum(total_counts), mean_half_life = mean(mean_half_life))

highlights <- ifelse(mouse_ptms_with_hl_oxi_grouped_bp$mean_half_life>115, '#F99417', 'black')
mouse_ptms_with_hl_oxi_grouped_bp$highlights <- highlights

ggplot(mouse_ptms_with_hl_oxi_grouped_bp, aes(x = mean_half_life, y = total_counts, color = highlights)) +
  geom_bar(stat = "identity", fill = "#5DB7B1", color = highlights) +
  labs(x = "Protein half-life (days)", y = "Number of occurrences") +
  annotate("label", x = 145, y = 2300, label = "P08121", fill='#F99417', alpha=1, label.padding = unit(0.3, 'line')) +
  annotate("label", x = 130, y = 6500, label = "P11087", fill='#F99417', alpha=1, label.padding = unit(0.3, 'line')) +
  annotate("label", x = 140, y = 5000, label = "Q01149", fill='#F99417', alpha=1, label.padding = unit(0.3, 'line')) +
  annotate("label", x = 135, y = 600, label = "Q02788", fill='#F99417', alpha=1, label.padding = unit(0.3, 'line')) +
  annotate("label", x = 110, y = 700, label = "Q04857", fill='#F99417', alpha=1, label.padding = unit(0.3, 'line')) +
  scale_x_continuous(limits = c(0, 170)) +
  scale_y_continuous(limits = c(0, 7000)) +
  theme_linedraw()

```

```{r}
#| message: false
#| echo: false
#| eval: false
scatter_data <- oxidation_mouse %>% 
  group_by(LeadProt) %>%
  summarise(sum(total_counts), mean(mean_half_life))

names(scatter_data) <- c('LeadProt', 'counts', 'HL')
head(scatter_data)

ggplot(scatter_data, aes(x=HL, y=counts, label=LeadProt)) +
  geom_rect(aes(xmin = 100, xmax = 150, ymin = 1500, ymax = 5500), 
              fill = "#5DB7B1", alpha = 0.1)+
  geom_point() +
  geom_text(nudge_x = 10, nudge_y = 5) +
  theme_linedraw()
```
