---
title: "GenAge"
format: 
  html:
    embed-resources: true
    theme: flatly
    toc: true
    toc-depth: 3
    toc-expand: 3
    toc-title: Contents
    smooth-scroll: true
editor: visual
---

```{r}
#THIS LOADS THE NEW DATASET
human_complete <- read.csv(file = "/Users/anastasialinchik/Desktop/Thesis/DATA/generated/human_new.tsv", header = T, sep = '\t')

human_ptms <- human_complete %>% filter(ptm_class == 'Post-translational')

leadprot_uniprot <- human_complete %>% dplyr::select(Uniprot_entry_name, LeadProt) %>% distinct()

# MODIFICATIONS
oxPTMs <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/table_oxPTMs.xlsx', sheet = 'oxPTMs')
oxPTMs <- oxPTMs %>%
  mutate(AAs_list = str_split(Specificity, ", ")) %>% dplyr::select(`Unimod #`, AAs_list) %>% rename(unimod_id = `Unimod #`)

lysine_acylation <- c(122, 1, 58, 1289, 747, 64)
AGE <- c(6, 907, 378)

genage <- read.csv('/Users/anastasialinchik/Desktop/Thesis/DATA/genage_human.csv', header = T) %>% dplyr::select(uniprot)# 295 proteins were mapped

#short_lived_proteins_hl <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/DATA/short_lived_proteins_hl.xlsx', sheet = 'HEK293T') %>% dplyr::select(`Uniprot ID`, `Half-life`) %>% rename(LeadProt = `Uniprot ID`, mean_hl_hours = `Half-life`)

#long_lived_proteins_hl <- read.csv(file = '/Users/anastasialinchik/Desktop/Thesis/DATA/generated/long_proteins_hl_grouped.tsv', sep = '\t', header = T)

#human_ptms_hl_short <- inner_join(human_ptms, short_lived_proteins_hl, by = join_by(LeadProt))

#human_complete_hl_short <- inner_join(human_complete, short_lived_proteins_hl, by = join_by(LeadProt))
```

```{r}
human_complete_hl_short_ageing <- human_complete_hl_short %>% filter(Uniprot_entry_name %in% genage$uniprot)
```

```{r}
ageing_prot <- human_ptms %>% filter(Uniprot_entry_name %in% genage$uniprot)
ageing_prot %>% group_by(Uniprot_entry_name) %>%
  summarise(count = sum(norm_counts)) %>% arrange(desc(count))
```

```{r}
table <- ageing_prot %>%
  group_by(Uniprot_entry_name) %>%
  summarize(PTMs = paste(unique(ptm_name), collapse = "; "))

kable(table, caption = "Summary of PTMs by Residue")
```

# Phosphorylation

#### GenAge

Got the list of genes that are associated with ageing from GenAge

```{r}
#| echo: false

genage_in_human_ptms <- human_ptms %>% filter(Uniprot_entry_name %in% genage$uniprot) %>% distinct(Uniprot_entry_name)

human_ptms_hl_short_ageing <- human_ptms_hl_short %>% filter(Uniprot_entry_name %in% genage$uniprot) 
```

Distribution of phosphorylated ageing proteins vs phosphorylated non-ageing proteins vs non-phosphorylated proteins vs non-phosphorylated ageing proteins.

```{r}
#| echo: false
pho_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(unimod_id == 21) 

no_pho_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(!unimod_id == 21) 

pho_no_age_prot <- human_ptms_hl_short %>% filter(unimod_id == 21) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_pho_no_age_prot <-  human_ptms_hl_short %>% filter(!unimod_id == 21) %>%
  filter(!Uniprot_entry_name %in% pho_age_prot$LeadProt) 

ggplot() +
  geom_density(data = no_pho_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_pho_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = pho_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'pho_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_pho_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'no_pho_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = pho_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'pho_age_prot'), alpha = 0.7, bw = 2) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  theme_classic() +
  scale_fill_manual(values = c('no_pho_no_age_prot' = '#EA7317', 'pho_no_age_prot' = '#FFB703','no_pho_age_prot'  = "#5DB7B1",'pho_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_pho_no_age_prot', 'pho_no_age_prot','no_pho_age_prot','pho_age_prot' ))  # Manually specify fill colors
```

```{r}
enriched <- no_pho_age_prot %>% filter(mean_hl_hours > 15 & mean_hl_hours < 25)

df <- enriched %>% group_by(Uniprot_entry_name) %>%
  summarise(sum_norm_counts = sum(norm_counts)) %>% 
  arrange(desc(sum_norm_counts)) 

ggplot(df[1:5,], aes(x = reorder(Uniprot_entry_name, sum_norm_counts), y = sum_norm_counts)) +
  geom_col() +
  coord_flip() +
  labs(y = 'Sum of the normalised counts', x = 'UniProt identifiers') +
  theme_classic()
```

```{r}
#| echo: false
enriched <- pho_age_prot %>% filter(mean_hl_hours > 15 & mean_hl_hours < 25)

df <- enriched %>% group_by(Uniprot_entry_name) %>%
  summarise(sum_norm_counts = sum(norm_counts)) %>% 
  arrange(desc(sum_norm_counts)) 

ggplot(df[1:5,], aes(x = reorder(Uniprot_entry_name, sum_norm_counts), y = sum_norm_counts)) +
  geom_col() +
  coord_flip() +
  labs(y = 'Sum of the normalised counts', x = 'UniProt identifiers') +
  theme_classic()
```

```{r}
df1 <- pho_age_prot 
df2 <- no_pho_no_age_prot 

df1_aggregated <- df1 %>%
  group_by(LeadProt) %>%
  summarise(total_count = sum(norm_counts))

# Aggregating normalized counts for df2
df2_aggregated <- df2 %>%
  group_by(LeadProt) %>%
  summarise(total_count = sum(norm_counts))

# Merging the two datasets
merged_data <- merge(df1_aggregated, df2_aggregated, by = "LeadProt", suffixes = c("_df1", "_df2"))

# Calculating fold change

merged_data <- merged_data %>%
  mutate(mean_count_df1 = total_count_df1 / sum(df1$norm_count),
         mean_count_df2 = total_count_df2 / sum(df2$norm_count)) %>%
  mutate(fold_change = mean_count_df1 / mean_count_df2)

# Defining enriched proteins in df1
enriched_in_df1 <- merged_data %>%
  filter(fold_change >= 2)

# Defining enriched proteins in df2
enriched_in_df2 <- merged_data %>%
  filter(fold_change <= 0.5) # Fold change of less than 1/2 indicates enrichment in df2

enriched_in_df1 <- inner_join(enriched_in_df1, leadprot_uniprot, by = 'LeadProt') 
enriched_in_df1 <- inner_join(enriched_in_df1, short_lived_proteins_hl, by = 'LeadProt')

enriched_in_df2 <- inner_join(enriched_in_df2, leadprot_uniprot, by = 'LeadProt') 
enriched_in_df2 <- inner_join(enriched_in_df2, short_lived_proteins_hl, by = 'LeadProt')
```

# Acetylation

Now looking at the ageing vs no-ageing comparison:

```{r}
#| echo: false
acetyl_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(unimod_id == 1) 

no_acetyl_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(!unimod_id == 1) 

acetyl_no_age_prot <- human_ptms_hl_short %>% filter(unimod_id == 1) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_acetyl_no_age_prot <-  human_ptms_hl_short %>% filter(!unimod_id == 1) %>%
  filter(!Uniprot_entry_name %in% acetyl_age_prot$LeadProt)

ggplot() +
  geom_density(data = no_acetyl_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_acetyl_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = acetyl_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'acetyl_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_acetyl_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_acetyl_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = acetyl_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'acetyl_age_prot'), alpha = 0.7, bw = 2) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  theme_classic() +
  scale_fill_manual(values = c('no_acetyl_no_age_prot' = '#EA7317', 'acetyl_no_age_prot' = '#FFB703','no_acetyl_age_prot'  = "#5DB7B1",'acetyl_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_acetyl_no_age_prot', 'acetyl_no_age_prot','no_acetyl_age_prot','acetyl_age_prot' ))  # Manually specify fill colors
```

# Methylation

Looking at the ageing vs non-ageing proteins now.

```{r}
#| echo: false

meth_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(unimod_id == 34) 

no_meth_age_prot <- human_ptms_hl_short_ageing %>% 
  filter(!unimod_id == 34) 

meth_no_age_prot <- human_ptms_hl_short %>% filter(unimod_id == 34) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot) 

no_meth_no_age_prot <-  human_ptms_hl_short %>% filter(!unimod_id == 34) %>%
  filter(!Uniprot_entry_name %in% meth_age_prot$LeadProt) 

ggplot() +
  geom_density(data = no_meth_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_meth_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = meth_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'meth_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_meth_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_meth_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = meth_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'meth_age_prot'), alpha = 0.7, bw = 2) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  theme_classic() +
  scale_fill_manual(values = c('no_meth_no_age_prot' = '#EA7317', 'meth_no_age_prot' = '#FFB703','no_meth_age_prot'  = "#5DB7B1",'meth_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_meth_no_age_prot', 'meth_no_age_prot','no_meth_age_prot','meth_age_prot' ))  # Manually specify fill colors
```

# oxPTMs

```{r}
#| echo: false
oxPTMs_age_prot <- human_complete_hl_short_ageing %>% 
  filter(unimod_id %in% oxPTMs$unimod_id & ptm_res %in% oxPTMs$AAs_list) 

no_oxPTMs_age_prot <- human_complete_hl_short_ageing %>% 
  filter(!unimod_id %in% oxPTMs$ID) %>% filter(ptm_class == 'Post-translational')

oxPTMs_no_age_prot <- human_complete_hl_short %>% 
  filter(unimod_id %in% oxPTMs$unimod_id & ptm_res %in% oxPTMs$AAs_list) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_oxPTMs_no_age_prot <-  human_complete_hl_short %>% filter(!unimod_id %in% oxPTMs$ID) %>%
  filter(!Uniprot_entry_name %in% oxPTMs_age_prot$LeadProt) %>% filter(ptm_class == 'Post-translational')

ggplot() +
  geom_density(data = no_oxPTMs_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_oxPTMs_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = oxPTMs_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'oxPTMs_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_oxPTMs_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_oxPTMs_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = oxPTMs_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'oxPTMs_age_prot'), alpha = 0.7, bw = 2) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  theme_classic() +
  scale_fill_manual(values = c('no_oxPTMs_no_age_prot' = '#EA7317', 'oxPTMs_no_age_prot' = '#FFB703','no_oxPTMs_age_prot'  = "#5DB7B1",'oxPTMs_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_oxPTMs_no_age_prot', 'oxPTMs_no_age_prot','no_oxPTMs_age_prot','oxPTMs_age_prot' ))  # Manually specify fill colors
```

GenAge phosphorylation long-lived proteins

```{r}
#| echo: false
#| warning: false

human_ptms_hl_long_ageing <- human_ptms_hl_long %>% filter(Uniprot_entry_name %in% genage$uniprot) 

pho_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(unimod_id == 21) 

no_pho_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(!unimod_id == 21) 

pho_no_age_prot <- human_ptms_hl_long %>% filter(unimod_id == 21) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_pho_no_age_prot <-  human_ptms_hl_long %>% filter(!unimod_id == 21) %>%
  filter(!Uniprot_entry_name %in% pho_age_prot$LeadProt) 

ggplot() +
  geom_density(data = no_pho_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_pho_no_age_prot'), alpha = 0.7, bw = 8) +
  geom_density(data = pho_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'pho_no_age_prot'), alpha = 0.7, bw = 8) +
  geom_density(data = no_pho_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'no_pho_age_prot'), alpha = 0.7, bw = 8) +
   geom_density(data = pho_age_prot, aes(x = mean_hl_hours, weight = norm_counts,fill = 'pho_age_prot'), alpha = 0.7, bw = 8) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  scale_x_continuous(limits = c(0,400)) +
  theme_classic() +
  scale_fill_manual(values = c('no_pho_no_age_prot' = '#EA7317', 'pho_no_age_prot' = '#FFB703','no_pho_age_prot'  = "#5DB7B1",'pho_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_pho_no_age_prot', 'pho_no_age_prot','no_pho_age_prot','pho_age_prot' ))  # Manually specify fill colors
```

### 

```{r}
#| echo: false
#| warning: false

meth_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(unimod_id == 34) 

no_meth_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(!unimod_id == 34) 

meth_no_age_prot <- human_ptms_hl_long %>% filter(unimod_id == 34) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_meth_no_age_prot <-  human_ptms_hl_long %>% filter(!unimod_id == 34) %>%
  filter(!Uniprot_entry_name %in% meth_age_prot$LeadProt)

ggplot() +
  geom_density(data = no_meth_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_meth_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = meth_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'meth_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_meth_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_meth_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = meth_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'meth_age_prot'), alpha = 0.7, bw = 2) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  scale_x_continuous(limits = c(48,200)) +
  theme_classic() +
  scale_fill_manual(values = c('no_meth_no_age_prot' = '#EA7317', 'meth_no_age_prot' = '#FFB703','no_meth_age_prot'  = "#5DB7B1",'meth_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_meth_no_age_prot', 'meth_no_age_prot','no_meth_age_prot','meth_age_prot' ))  # Manually specify fill colors
```

```{r}
#| echo: false
acetyl_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(unimod_id == 1) 

no_acetyl_age_prot <- human_ptms_hl_long_ageing %>% 
  filter(!unimod_id == 1) 

acetyl_no_age_prot <- human_ptms_hl_long %>% filter(unimod_id == 1) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_acetyl_no_age_prot <-  human_ptms_hl_long %>% filter(!unimod_id == 1) %>%
  filter(!Uniprot_entry_name %in% acetyl_age_prot$LeadProt)

ggplot() +
  geom_density(data = no_acetyl_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_acetyl_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = acetyl_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'acetyl_no_age_prot'), alpha = 0.7, bw = 2) +
  geom_density(data = no_acetyl_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_acetyl_age_prot'), alpha = 0.7, bw = 2) +
   geom_density(data = acetyl_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'acetyl_age_prot'), alpha = 0.7, bw = 2) +
  scale_x_continuous(limits = c(48,200)) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  theme_classic() +
  scale_fill_manual(values = c('no_acetyl_no_age_prot' = '#EA7317', 'acetyl_no_age_prot' = '#FFB703','no_acetyl_age_prot'  = "#5DB7B1",'acetyl_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_acetyl_no_age_prot', 'acetyl_no_age_prot','no_acetyl_age_prot','acetyl_age_prot' ))  # Manually specify fill colors
```

```{r}
#| echo: false
#| warning: false
oxPTMs_age_prot <- human_complete_hl_long_ageing %>% 
  filter(unimod_id %in% oxPTMs$unimod_id & ptm_res %in% oxPTMs$AAs_list) 

no_oxPTMs_age_prot <- human_complete_hl_long_ageing %>% 
  filter(!unimod_id %in% oxPTMs$ID) %>% filter(ptm_class == 'Post-translational')

oxPTMs_no_age_prot <- human_complete_hl_long %>% 
  filter(unimod_id %in% oxPTMs$unimod_id & ptm_res %in% oxPTMs$AAs_list) %>%
  filter(!Uniprot_entry_name %in% genage$uniprot)

no_oxPTMs_no_age_prot <-  human_complete_hl_long %>% filter(!unimod_id %in% oxPTMs$ID) %>%
  filter(!Uniprot_entry_name %in% oxPTMs_age_prot$LeadProt) %>% filter(ptm_class == 'Post-translational')

ggplot() +
  geom_density(data = no_oxPTMs_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_oxPTMs_no_age_prot'), alpha = 0.7, bw = 8) +
  geom_density(data = oxPTMs_no_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'oxPTMs_no_age_prot'), alpha = 0.7, bw = 8) +
  geom_density(data = no_oxPTMs_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'no_oxPTMs_age_prot'), alpha = 0.7, bw = 8) +
   geom_density(data = oxPTMs_age_prot, aes(x = mean_hl_hours, weight = norm_counts, fill = 'oxPTMs_age_prot'), alpha = 0.7, bw = 8) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  scale_x_continuous(limits = c(0,500)) +
  theme_classic() +
  scale_fill_manual(values = c('no_oxPTMs_no_age_prot' = '#EA7317', 'oxPTMs_no_age_prot' = '#FFB703','no_oxPTMs_age_prot'  = "#5DB7B1",'oxPTMs_age_prot' = '#3DA5D9'), name = 'Legend', breaks = c('no_oxPTMs_no_age_prot', 'oxPTMs_no_age_prot','no_oxPTMs_age_prot','oxPTMs_age_prot' ))  # Manually specify fill colors

```
