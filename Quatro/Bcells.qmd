---
title: "B cells"
format: html
editor: visual
---

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(kableExtra)
library(ggpubr)
library(plotly)
library(stringr)
library(VennDiagram)
```

```{r}
#| echo: false
#| include: false
Bcells_hl <- read.csv(file = '/Users/anastasialinchik/Desktop/Thesis/DATA/generated/Bcells_hl.tsv', header = T, sep = '\t')

# This is just a filtered by Post-translational
human_ptms <- read.csv(file = "/Users/anastasialinchik/Desktop/Thesis/DATA/generated/human_ptms.tsv", header = T, sep = '\t')

oxPTMs <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/table_oxPTMs.xlsx', sheet = 'oxPTMs')
oxPTMs <- oxPTMs %>%
  mutate(AAs_list = str_split(Specificity, ", ")) %>% dplyr::select(`Unimod #`, AAs_list) %>% rename(unimod_id = `Unimod #`)
```

cytoplasmic projects:

-   old B cells: PXD006570

-   young B cells:PXD006572

nuclear proteins:

-   old B cells:PXD006571

-   young B cells:PXD006576

```{r}
#| echo: false

human_ptms_cyto_old_hl <- human_ptms %>% filter(project_id == 'PXD006570') %>%
  inner_join(Bcells_hl, by = join_by(LeadProt))
human_ptms_cyto_young_hl <- human_ptms %>% filter(project_id == 'PXD006572') %>%
  inner_join(Bcells_hl, by = join_by(LeadProt))

human_ptms_nuc_old_hl <- human_ptms %>% filter(project_id == 'PXD006571') %>%
  inner_join(Bcells_hl, by = join_by(LeadProt))
human_ptms_nuc_young_hl <- human_ptms %>% filter(project_id == 'PXD006576') %>%
  inner_join(Bcells_hl, by = join_by(LeadProt))
```

## Distribution of the half-lives

Take the cytoplasmic proteins and plot 2 density plots. Compare the distributions of the half-lives between the

Look at only the cytoplasmic ones:

```{r}
human_ptms_cyto_old_hl %>% distinct(LeadProt) %>% dim()
human_ptms_cyto_young_hl %>% distinct(LeadProt) %>% dim()
human_ptms_cyto_old_hl %>% filter(!LeadProt %in% human_ptms_cyto_young_hl$LeadProt) %>% distinct(LeadProt) %>% dim()
human_ptms_cyto_old_hl %>% filter(LeadProt %in% human_ptms_cyto_young_hl$LeadProt) %>% distinct(LeadProt) %>% dim()
human_ptms_cyto_young_hl %>% filter(!LeadProt %in% human_ptms_cyto_old_hl$LeadProt) %>% distinct(LeadProt) %>% dim()
```

Venn diagram

```{r}
# Unique LeadProt in Old
old_proteins <- human_ptms_cyto_old_hl %>%
  distinct(LeadProt) %>%
  pull(LeadProt)

# Unique LeadProt in Young
young_proteins <- human_ptms_cyto_young_hl %>%
  distinct(LeadProt) %>%
  pull(LeadProt)

# Define your sets
list_of_sets <- list(
  Old = old_proteins,
  Young = young_proteins
)

display_venn <- function(x, ...){
  grid.newpage()
  venn_object <- venn.diagram(x, filename = NULL, ...)
  grid.draw(venn_object)
}
display_venn(list_of_sets, category.names = c("Old cyt" , "Young cyt" ),
  fill = c("#EA7317", "#FFB703"), fontfamily = "Lato", cat.fontfamily = "Lato", alpha = 0.6, cex = 1.5, cat.cex = 1.2, margin = 0.05)
```

```{r}
# Unique LeadProt in Old
old_proteins <- human_ptms_nuc_old_hl %>%
  distinct(LeadProt) %>%
  pull(LeadProt)

# Unique LeadProt in Young
young_proteins <- human_ptms_nuc_young_hl %>%
  distinct(LeadProt) %>%
  pull(LeadProt)

# Define your sets
list_of_sets <- list(
  Old = old_proteins,
  Young = young_proteins
)

display_venn <- function(x, ...){
  grid.newpage()
  venn_object <- venn.diagram(x, filename = NULL, ...)
  grid.draw(venn_object)
}
display_venn(list_of_sets, category.names = c("Old nuc" , "Young nuc" ),
  fill = c("#2364AA", "#5DB7B1"), fontfamily = "Lato", cat.fontfamily = "Lato", alpha = 0.6, cex = 1.5, cat.cex = 1.2, margin = 0.05)
```

```{r}
# cytopasmic proteins in both
cyto_both <- human_ptms_cyto_old_hl %>% filter(LeadProt %in% human_ptms_cyto_young_hl$LeadProt) %>% distinct(LeadProt)
cyto_old_only <- human_ptms_cyto_old_hl %>% filter(!LeadProt %in% human_ptms_cyto_young_hl$LeadProt) %>% distinct(LeadProt)
cyto_young_only <- human_ptms_cyto_young_hl %>% filter(!LeadProt %in% human_ptms_cyto_old_hl$LeadProt) %>% distinct(LeadProt)


# nucleoplasmic
nuc_both <- human_ptms_nuc_old_hl %>% filter(LeadProt %in% human_ptms_nuc_young_hl$LeadProt) %>% distinct(LeadProt)
nuc_old_only <- human_ptms_nuc_old_hl %>% filter(!LeadProt %in% human_ptms_nuc_young_hl$LeadProt) %>% distinct(LeadProt)
nuc_young_only <- human_ptms_nuc_young_hl %>% filter(!LeadProt %in% human_ptms_nuc_old_hl$LeadProt) %>% distinct(LeadProt)
```

```{r}
#| warning: false
ggplot() +
  geom_density(data = human_ptms_cyto_old_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_old'), alpha = 0.7, bw = 4) +
  geom_density(data = human_ptms_cyto_young_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_young'), alpha = 0.7, bw = 4) +
  scale_fill_manual(values = c('cyto_old' = '#EA7317', 'cyto_young' = '#FFB703'), name = 'Legend') +
  scale_x_continuous(limits = c(0,600)) +
  theme_classic()
```

Only look at the proteins that are present in both

```{r}
#| warning: false
df1 <- human_ptms_cyto_old_hl %>% filter(LeadProt %in% cyto_both$LeadProt)
df2 <- human_ptms_cyto_young_hl %>% filter(LeadProt %in% cyto_both$LeadProt)
ggplot() +
  geom_density(data = df1, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_old'), alpha = 0.7, bw = 4) +
  geom_density(data = df2, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_young'), alpha = 0.7, bw = 4) +
  scale_fill_manual(values = c('cyto_old' = '#EA7317', 'cyto_young' = '#FFB703'), name = 'Legend') +
  scale_x_continuous(limits = c(0,350)) +
  theme_classic()
```

```{r}
#| warning: false
ggplot() +
  geom_density(data = human_ptms_nuc_old_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_old'), alpha = 0.7, bw = 4) +
  geom_density(data = human_ptms_nuc_young_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_young'), alpha = 0.7, bw = 4) +
  scale_fill_manual(values = c('nuc_old' = '#2364AA', 'nuc_young' = '#5DB7B1'), name = 'Legend') +
  scale_x_continuous(limits = c(0,350)) +
  theme_classic()
```

```{r}
df1 <- human_ptms_nuc_old_hl %>% filter(LeadProt %in% nuc_both$LeadProt)
df2 <- human_ptms_nuc_young_hl %>% filter(LeadProt %in% nuc_both$LeadProt)

ggplot() +
  geom_density(data = df1, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_old'), alpha = 0.7, bw = 4) +
  geom_density(data = df2, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_young'), alpha = 0.7, bw = 4) +
  scale_fill_manual(values = c('nuc_old' = '#2364AA', 'nuc_young' = '#5DB7B1'), name = 'Legend') +
  scale_x_continuous(limits = c(0,350)) +
  theme_classic()
```

```{r}
#| warning: false
df1 <- human_ptms_nuc_old_hl %>% filter(LeadProt %in% nuc_both$LeadProt)
df2 <- human_ptms_nuc_young_hl %>% filter(LeadProt %in% nuc_both$LeadProt)

ggplot() +
  geom_density(data = df1, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_old'), alpha = 0.7, bw = 4) +
  geom_density(data = df2, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_young'), alpha = 0.7, bw = 4) +
  scale_fill_manual(values = c('nuc_old' = '#2364AA', 'nuc_young' = '#5DB7B1'), name = 'Legend') +
  scale_x_continuous(limits = c(0,350)) +
  theme_classic()
```

```{r}
df1 <- human_ptms_cyto_old_hl %>% filter(LeadProt %in% cyto_both$LeadProt)
df2 <- human_ptms_nuc_old_hl %>% filter(LeadProt %in% nuc_both$LeadProt)

df3 <- human_ptms_cyto_young_hl %>% filter(LeadProt %in% cyto_both$LeadProt)
df4 <- human_ptms_nuc_young_hl %>% filter(LeadProt %in% nuc_both$LeadProt)

old <- rbind(df1, df2) %>%
  group_by(LeadProt) %>%
  summarise(total_count = sum(norm_counts))
young <- rbind(df3, df4) %>%
  group_by(LeadProt) %>%
  summarise(total_count = sum(norm_counts))

# Combine the dataframes
combined_data <- merge(old, young, by = "LeadProt", suffixes = c(".Group1", ".Group2"))

# Function to perform t-test and return the p-value
perform_t_test <- function(row) {
  t_test_result <- t.test(c(row["Counts.Group1"]), c(row["Counts.Group2"]), alternative = "two.sided")
  return(t_test_result$p.value)
}

# Apply the function to each row
combined_data$PValue <- apply(combined_data, 1, perform_t_test)


```

```{r}
#| echo: false
#| warning: false

ggplot() +
  geom_density(data = human_ptms_cyto_old_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_old'), alpha = 0.7, bw = 4) +
  geom_density(data = human_ptms_cyto_young_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_young'), alpha = 0.7, bw = 4) +
  geom_density(data = human_ptms_nuc_old_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_old'), alpha = 0.7, bw = 4) +
  geom_density(data = human_ptms_nuc_young_hl, aes(x = mean_hl_hours, weight = norm_counts, fill = 'nuc_young'), alpha = 0.7, bw = 4) +
  scale_x_continuous(limits = c(0,400)) +
  scale_fill_manual(values = c('cyto_old' = '#EA7317', 'cyto_young' = '#FFB703','nuc_old'  = "#5DB7B1",'nuc_young' = '#3DA5D9'), name = 'Legend') +
  theme_classic()
```

## PTMs

### Phosphorylation

For cytoplasmic proteins what are the differences between old and young proteins?

```{r}
#| warning: false
human_ptms_cyto_old_hl_pho <- human_ptms_cyto_old_hl %>% filter(unimod_id == 21) 
human_ptms_cyto_old_hl_no_pho <- human_ptms_cyto_old_hl %>% filter(!unimod_id == 21) 
human_ptms_cyto_young_hl_no_pho <- human_ptms_cyto_young_hl %>% filter(!unimod_id == 21) 
human_ptms_cyto_young_hl_pho <- human_ptms_cyto_young_hl %>% filter(unimod_id == 21) 

human_ptms_nuc_old_hl_pho <- human_ptms_nuc_old_hl %>% filter(unimod_id == 21) 
human_ptms_nuc_old_hl_no_pho <- human_ptms_nuc_old_hl %>% filter(!unimod_id == 21) 
human_ptms_nuc_young_hl_pho <-  human_ptms_nuc_young_hl %>% filter(unimod_id == 21) 
human_ptms_nuc_young_hl_no_pho <-  human_ptms_nuc_young_hl %>% filter(!unimod_id == 21) 

ggplot() +
  geom_density(data = human_ptms_cyto_old_hl_pho, aes(x = mean_hl_hours, weight = norm_counts, fill = 'cyto_old_hl_pho'), alpha = 0.7, bw = 5) +
  geom_density(data = human_ptms_cyto_old_hl_no_pho, aes(x = mean_hl_hours, weight = norm_counts,fill = 'cyto_old_hl_no_pho'), alpha = 0.7, bw = 5) +
  geom_density(data = human_ptms_cyto_young_hl_no_pho, aes(x = mean_hl_hours, weight = norm_counts,fill = 'cyto_young_hl_no_pho'), alpha = 0.7, bw = 5) +
   geom_density(data = human_ptms_cyto_young_hl_pho, aes(x = mean_hl_hours, weight = norm_counts,fill = 'cyto_young_hl_pho'), alpha = 0.7, bw = 5) +
  labs(x = 'Mean half-lives (hours)', y = 'Density') +
  scale_x_continuous(limits = c(0,150)) +
  theme_classic() +
  scale_fill_manual(values = c('cyto_old_hl_pho' = '#EA7317', 'cyto_old_hl_no_pho' = '#FFB703','cyto_young_hl_no_pho'  = "#5DB7B1",'cyto_young_hl_pho' = '#3DA5D9'), name = 'Legend')  # Manually specify fill colors
```

### Methylation

### Acetylation

### Oxidation

### oxPTMs

Approach:

-   Get a list of PTMs that correlate with ageing such as oxPTMs, acetylation etc.

-   Test whether the abundance of these PTMs changes between the long-lived proteins and the normal proteins.

### Bar chart

Is there less phosphorylation in young cells compared to old cells?

```{r}
#| echo: false

df_1 <- human_ptms_nuc_old_hl %>% mutate(age_group = 'old')
df_2 <- human_ptms_nuc_young_hl %>% mutate(age_group = 'young')
df <- rbind(df_1, df_2)
df <- df %>%
  mutate(hl_group = case_when(
    mean_hl_hours <= 50 ~ "0-50",
    mean_hl_hours <= 100 ~ "50-100",
    mean_hl_hours <= 150 ~ "100-150",
    mean_hl_hours <= 200 ~ "150-200",
    mean_hl_hours <= 250 ~ "200-250",
    TRUE ~ "250+"
  )) 

mean_hours_per_hl_group <- df %>%
  group_by(hl_group, age_group) %>%
  summarize(age_group, mean_ptms_group = mean(norm_counts)) %>% distinct()

mod_group_colours <- c('young' = '#EA7317', 'old' = '#5DB7B1')
# Plot bar chart
ggplot(mean_hours_per_hl_group, aes(x = hl_group, y = mean_ptms_group, fill = age_group)) +
  geom_bar(stat = "identity", position = 'dodge') +
  scale_x_discrete(limits = c("0-50", "50-100", "100-150", "150-200", "200-250", "250+")) +
  scale_fill_manual(values = mod_group_colours, name = 'Key') +
  labs(x = "Half-lives (hours)",
       y = "Mean sum of normalised PTM counts") +
  theme_classic()
```

Acetylation

```{r}
df_1 <- human_ptms_nuc_old_hl %>% mutate(age_group = 'nuc_old') %>% filter(unimod_id == 1)
df_2 <- human_ptms_nuc_young_hl %>% mutate(age_group = 'nuc_young') %>% filter(unimod_id == 1)
df_3 <- human_ptms_cyto_old_hl %>% mutate(age_group = 'cyto_old') %>% filter(unimod_id == 1)
df_4 <- human_ptms_cyto_young_hl %>% mutate(age_group = 'cyto_young') %>% filter(unimod_id == 1)

df <- rbind(df_1, df_2, df_3, df_4)
df <- df %>%
  mutate(hl_group = case_when(
    mean_hl_hours <= 50 ~ "0-50",
    mean_hl_hours <= 100 ~ "50-100",
    mean_hl_hours <= 150 ~ "100-150",
    mean_hl_hours <= 200 ~ "150-200",
    mean_hl_hours <= 250 ~ "200-250",
    TRUE ~ "250+"
  )) 

mean_hours_per_hl_group <- df %>%
  group_by(hl_group, age_group) %>%
  summarize(age_group, mean_ptms_group = mean(norm_counts)) %>% distinct()

mod_group_colours <- c('nuc_old' = '#EA7317', 'cyto_old' = '#2364AA', 'nuc_young' = '#F9AE8B', 'cyto_young' = '#219EBC')
# Plot bar chart
ggplot(mean_hours_per_hl_group, aes(x = hl_group, y = mean_ptms_group, fill = age_group)) +
  geom_bar(stat = "identity", position = 'dodge') +
  scale_x_discrete(limits = c("0-50", "50-100", "100-150", "150-200", "200-250", "250+")) +
  scale_fill_manual(values = mod_group_colours, name = 'Key') +
  labs(x = "Half-lives (hours)",
       y = "Mean sum of normalised PTM counts") +
  theme_classic()
```

Phosphorylation

```{r}
df_1 <- human_ptms_nuc_old_hl %>% mutate(age_group = 'nuc_old') %>% filter(unimod_id == 21)
df_2 <- human_ptms_nuc_young_hl %>% mutate(age_group = 'nuc_young') %>% filter(unimod_id == 21)
df_3 <- human_ptms_cyto_old_hl %>% mutate(age_group = 'cyto_old') %>% filter(unimod_id == 21)
df_4 <- human_ptms_cyto_young_hl %>% mutate(age_group = 'cyto_young') %>% filter(unimod_id == 21)

df <- rbind(df_1, df_2, df_3, df_4)
df <- df %>%
  mutate(hl_group = case_when(
    mean_hl_hours <= 50 ~ "0-50",
    mean_hl_hours <= 100 ~ "50-100",
    mean_hl_hours <= 150 ~ "100-150",
    mean_hl_hours <= 200 ~ "150-200",
    mean_hl_hours <= 250 ~ "200-250",
    TRUE ~ "250+"
  )) 

mean_hours_per_hl_group <- df %>%
  group_by(hl_group, age_group) %>%
  summarize(age_group, mean_ptms_group = mean(norm_counts)) %>% distinct()

mod_group_colours <- c('nuc_old' = '#EA7317', 'cyto_old' = '#2364AA', 'nuc_young' = '#F9AE8B', 'cyto_young' = '#219EBC')
# Plot bar chart
ggplot(mean_hours_per_hl_group, aes(x = hl_group, y = mean_ptms_group, fill = age_group)) +
  geom_bar(stat = "identity", position = 'dodge') +
  scale_x_discrete(limits = c("0-50", "50-100", "100-150", "150-200", "200-250", "250+")) +
  scale_fill_manual(values = mod_group_colours, name = 'Key') +
  labs(x = "Half-lives (hours)",
       y = "Mean sum of normalised PTM counts") +
  theme_classic()
```

Look at oxPTMs

```{r}
df_1 <- human_ptms_nuc_old_hl %>% mutate(age_group = 'nuc_old') %>% filter(unimod_id %in% oxPTMs$ID)
df_2 <- human_ptms_nuc_young_hl %>% mutate(age_group = 'nuc_young') %>% filter(unimod_id %in% oxPTMs$ID)
df_3 <- human_ptms_cyto_old_hl %>% mutate(age_group = 'cyto_old') %>% filter(unimod_id %in% oxPTMs$ID)
df_4 <- human_ptms_cyto_young_hl %>% mutate(age_group = 'cyto_young') %>% filter(unimod_id %in% oxPTMs$ID)

df <- rbind(df_1, df_2, df_3, df_4)
df <- df %>%
  mutate(hl_group = case_when(
    mean_hl_hours <= 50 ~ "0-50",
    mean_hl_hours <= 100 ~ "50-100",
    mean_hl_hours <= 150 ~ "100-150",
    mean_hl_hours <= 200 ~ "150-200",
    mean_hl_hours <= 250 ~ "200-250",
    TRUE ~ "250+"
  )) 

mean_hours_per_hl_group <- df %>%
  group_by(hl_group, age_group) %>%
  summarize(age_group, mean_ptms_group = mean(norm_counts)) %>% distinct()

mod_group_colours <- c('nuc_old' = '#EA7317', 'cyto_old' = '#2364AA', 'nuc_young' = '#F9AE8B', 'cyto_young' = '#219EBC')
# Plot bar chart
ggplot(mean_hours_per_hl_group, aes(x = hl_group, y = mean_ptms_group, fill = age_group)) +
  geom_bar(stat = "identity", position = 'dodge') +
  scale_x_discrete(limits = c("0-50", "50-100", "100-150", "150-200", "200-250", "250+")) +
  scale_fill_manual(values = mod_group_colours, name = 'Key') +
  labs(x = "Half-lives (hours)",
       y = "Mean sum of normalised PTM counts") +
  theme_classic()
```

# Modifications in cytoplasmic proteins

The more modified proteins vs less modified proteins depending on the age.

```{r}
human_cyto_old <- human_new %>%
  filter(project_id == 'PXD006570') 

human_cyto_young <- human_new %>%
  filter(project_id == 'PXD006572') 

df1 <- human_cyto_old
df2 <- human_cyto_young

# Aggregating normalized counts for df1
df1_aggregated <- df1 %>%
  group_by(LeadEntry) %>%
  summarise(total_count = sum(norm_counts))

# Aggregating normalized counts for df2
df2_aggregated <- df2 %>%
  group_by(LeadEntry) %>%
  summarise(total_count = sum(norm_counts))

# Merging the two datasets
merged_data <- merge(df1_aggregated, df2_aggregated, by = "LeadEntry", suffixes = c("_df1", "_df2"))

# Calculating fold change

merged_data <- merged_data %>%
  mutate(mean_count_df1 = total_count_df1 / sum(human_cyto_old$norm_count),
         mean_count_df2 = total_count_df2 / sum(human_cyto_young$norm_count)) %>%
  mutate(fold_change = mean_count_df1 / mean_count_df2)

merged_data <- merged_data %>% mutate(log_fold = log2(fold_change)) %>% arrange(desc(log_fold)) 
```

```{r}
df <- rbind(merged_data[1:10,], merged_data[2682:2692,])
ggplot(df, aes(x = log_fold, y = LeadEntry)) +
  geom_col()
```

```{r}
merged_data %>% filter(log_fold > 1) %>% dplyr:: select(LeadEntry) %>%
write.table(file = '/Users/anastasialinchik/Downloads/ids.tsv', row.names = F, sep="\t", quote = F)
```

The up/down regulated modifications

```{r}
human_cyto_old <- human_new %>%
  filter(project_id == 'PXD006570') %>% filter(ptm_class== 'Post-translational')

human_cyto_young <- human_new %>%
  filter(project_id == 'PXD006572') %>% filter(ptm_class== 'Post-translational')

df1 <- human_cyto_old
df2 <- human_cyto_young

# Aggregating normalized counts for df1
df1_aggregated <- df1 %>%
  group_by(ptm_name) %>%
  summarise(total_count = sum(norm_counts))

# Aggregating normalized counts for df2
df2_aggregated <- df2 %>%
  group_by(ptm_name) %>%
  summarise(total_count = sum(norm_counts))

# Merging the two datasets
merged_data <- merge(df1_aggregated, df2_aggregated, by = "ptm_name", suffixes = c("_df1", "_df2"))

# Calculating fold change

merged_data <- merged_data %>%
  mutate(mean_count_df1 = total_count_df1 / sum(human_cyto_old$norm_count),
         mean_count_df2 = total_count_df2 / sum(human_cyto_young$norm_count)) %>%
  mutate(fold_change = mean_count_df1 / mean_count_df2)

merged_data <- merged_data %>% mutate(log_fold = log2(fold_change)) %>% arrange(desc(log_fold)) 
```

```{r}
df <- rbind(merged_data[1:10,], merged_data[49:59,])
ggplot(df, aes(x = log_fold, y = ptm_name)) +
  geom_col() + 
```

## Chaperones

```{r}
all_chaperones <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/DATA/all_chaperones.xls', sheet = 'BREHME_TABLE S2A', skip = 8, col_names = T) %>% dplyr::select(`Entrez-ID`, `Uniprot`) %>% separate_rows(Uniprot, sep = "; ") 

cols <- c('Entry#', 'Label [Family]', 'Age-correlation', 'p-val', 'col5', 'col6', 'col7', 'col8', 'col9', 'col10')
repressed_chap <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/DATA/subnetwork_chaperones.xlsx', sheet = 'BREHME_TABLE S3D', skip = 20, col_names = cols) %>% dplyr::select('Entry#', 'p-val') %>% inner_join(all_chaperones, by = join_by('Entry#' == 'Entrez-ID'))

induced_chap <- read_excel(path = '/Users/anastasialinchik/Desktop/Thesis/DATA/subnetwork_chaperones.xlsx', sheet = 'BREHME_TABLE S3E', skip = 19, col_names = T) %>% dplyr::select(`Entrez-ID`) %>% inner_join(all_chaperones, by = 'Entrez-ID')
```

```{r}
vec1 <- merged_data %>% filter(log_fold > 1) %>% dplyr:: select(LeadEntry) 

inner_join(vec1, repressed_chap, by = join_by('LeadEntry' == 'Uniprot'))
```

```{r}
cyto<- rbind(human_cyto_old, human_cyto_young)
inner_join(all_chaperones, cyto, by = join_by('Uniprot' == 'LeadEntry'))
```
