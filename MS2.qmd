---
title: "MS2"
format: 
  html:
    theme: flatly
    toc: true
    toc-depth: 2
    toc-expand: 2
    toc-title: Contents
    smooth-scroll: true
editor: visual
params:
  organism: mouse
---

```{r}
#| label: setup
#| echo: false
knitr::opts_chunk$set(fig.align = 'center')
```

# Data retrieval

## PTMs

Data was retrieved from the [dbPTM](https://awi.cuhk.edu.cn/dbPTM/). The data can be unzipped using the following Bash command: `gunzip FILENAME`

Specifically, the data was downloaded from [here](https://awi.cuhk.edu.cn/dbPTM/download.php#dataset). (After the download, check the unzipped file. You may need to delete the first row before reading in the data.) Data for the following modification types was downloaded: Oxidation, Phosphorylation, Deamination.

```{r}
#| echo: false
#| label: PTMs
#| warning: false
library(tidyr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(dplyr)

# PTMs data

deamination <- read.csv("/Users/anastasialinchik/Downloads/Deamination", header = F, col.names = c("entry_name", "UniProtID", "modified_position", "mod_type", "PubMedID", "upstream_downstream_seq"), sep = "\t")

oxidation <- read.csv("/Users/anastasialinchik/Downloads/Oxidation", col.names = c("entry_name", "UniProtID", "modified_position", "mod_type", "PubMedID", "upstream_downstream_seq"), sep = "\t")

phosphorylation <- read.csv("/Users/anastasialinchik/Downloads/Phosphorylation", col.names = c("entry_name", "UniProtID", "modified_position", "mod_type", "PubMedID", "upstream_downstream_seq"), sep = "\t")

kable(head(deamination))
kable(head(oxidation))
kable(head(phosphorylation))
```

It is first necessary to check, the organisms for which the data about PTMs was collected so that the data for the half-lives matches.

```{r}
#| label: organisms
#| tbl-cap: "A count of entries for the most commonly occurring organisms in the PTM data"
#| echo: false

ptms_df <- rbind(deamination, oxidation, phosphorylation)
occurrences <- ptms_df %>% select(entry_name) %>% 
  mutate(org = sub(".*_", "", entry_name)) %>%
  group_by(org) %>% 
  summarise(count = n()) %>% 
  filter(count> 10000) %>%
  arrange(desc(count)) 

kable_styled <- kable(head(occurrences), align = c('c', 'c'), "html") 

# Print the styled table
kable_styled
```

## Protein half-lives

Protein half-lives were used as a measure of protein turnover rates. There is no overall database with all of the protein half-lives, therefore the data was found in different papers.

The organisms with the most PTM data are HUMAN, MOUSE, RAT AND YEAST.

**Human** protein life-times were downloaded from the following paper: [Systematic study of the dynamics and half-lives of newly synthesized proteins in human cells](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5975921/). The necessary data can be found in the Supplementary Material section, in the fourth file with the name `SC-007-C5SC03826J-s004.xlsx`.

The half-lives of **mouse** proteins were downloaded from the MassIVE repository under the accession number MSV000086426. The specific file used has the name `f.MSV000086426/updates/2021-02-12_zrolfs_27ac70a9/other/ResultFiles/AC_Results/AC_ProteinTurnoverResults.tsv`. It can be downloaded [here](https://massive.ucsd.edu/ProteoSAFe/dataset_files.jsp?task=5abc07078a064836827606e5455b8587#%7B%22table_sort_history%22%3A%22main.collection_asc%22%7D).

TODO rat data

The half-lives of **yeast** proteins were downloaded from the following paper: [Global Proteome Turnover Analyses of the Yeasts S. cerevisiae and S. pombe](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5975921/). The necessary data can be found in the Supplementary Material section, in the files with the names `NIHMS640572-supplement-2` and `NIHMS640572-supplement-3.xlsx`.

```{r}
#| label: half-lives
#| echo: false 
#| warning: false

#The warnings can be ignored because they are for other columns. 

half_lives_mice <- read.csv("/Users/anastasialinchik/Downloads/AC_ProteinTurnoverResults.tsv", header = T, sep = "\t") %>% separate_rows(Protein, sep = ";") %>% select(Protein, Half.Life)
names(half_lives_mice) <- c("Uniprot_MOUSE", "half_life")

half_lives_mice <- half_lives_mice %>%
  group_by(Uniprot_MOUSE) %>%
  summarise(mean_half_life = mean(half_life)) %>%
  arrange(desc(mean_half_life))

half_lives_yeast1 <- read_xlsx("/Users/anastasialinchik/Downloads/NIHMS640572-supplement-2.xlsx") %>% separate_rows(UNIPROT, sep = ";")
half_lives_yeast <- read_xlsx("/Users/anastasialinchik/Downloads/NIHMS640572-supplement-3.xlsx") %>% separate_rows(UNIPROT, sep = ";")
half_lives_yeast <- rbind(half_lives_yeast, half_lives_yeast1)
half_lives_yeast <- half_lives_yeast %>% select(UNIPROT, "t1/2 (hours)") %>%
  mutate(Half.Life = half_lives_yeast$`t1/2 (hours)`/24) %>% select(UNIPROT, Half.Life)
names(half_lives_yeast) <- c("Uniprot_YEAST", "half_life")

half_lives_yeast <- half_lives_yeast %>%
  group_by(Uniprot_YEAST) %>%
  summarise(mean_half_life = mean(half_life)) %>%
  arrange(desc(mean_half_life))

half_lives_human <- read_xlsx("/Users/anastasialinchik/Downloads/SC-007-C5SC03826J-s004.xlsx", skip = 1) %>% mutate(Half.Life = `t1/2 (hour)`/24) %>% select(`Uniprot ID`, Half.Life)
names(half_lives_human) <- c("Uniprot_HUMAN", "half_life")

half_lives_human <- half_lives_human %>%
  group_by(Uniprot_HUMAN) %>%
  summarise(mean_half_life = mean(half_life)) %>%
  arrange(desc(mean_half_life))

kable(head(half_lives_mice), align = c('c', 'c'), "html")
kable(head(half_lives_yeast), align = c('c', 'c'), "html")
kable(head(half_lives_human), align = c('c', 'c'), "html")
```

```{r}
#| label: UniProt
#| echo: false
#| eval: false

# Data from Uniprot was downloaded **only for mice**.
# URL for the TSV file
url <- "https://rest.uniprot.org/uniprotkb/stream?fields=accession%2Cid%2Cft_mod_res&format=tsv&query=%28%28organism_id%3A10090%29+AND+%28%28cc_ptm_exp%3Aphosphorylation%29+OR+%28cc_ptm_exp%3Aacetylation%29+OR+%28cc_ptm_exp%3Adeamination%29%29%29"

# Read the TSV file from the URL
uniprot_ptms <- read.table(url, sep="\t", header=TRUE)

# Check the first few rows of the data
kable(head(uniprot_ptms))

uniprot_df <- inner_join(uniprot_ptms, half_lives_mice, by = c("Entry" = "Protein")) %>%
  select(Entry, Half.Life)
dim_uniprot <- dim(uniprot_df)
ggplot(mouse_df_uniprot, aes(x = Half.Life)) +
  geom_histogram(bins = 100)
```

Matching protein half-lives and PTMs based on the Uniprot ID

```{r}
#| label: single organism 
#| echo: false
# Filter modifications to only look at params$organism 

# mouse
oxidation_mouse <- oxidation %>% filter(grepl("_MOUSE", entry_name))
phosphorylation_mouse <- phosphorylation %>% filter(grepl("_MOUSE", entry_name))
deamination_mouse <- deamination %>% filter(grepl("_MOUSE", entry_name))

# yeast
oxidation_yeast <- oxidation %>% filter(grepl("_YEAST", entry_name))
phosphorylation_yeast <- phosphorylation %>% filter(grepl("_YEAST", entry_name))
deamination_yeast <- deamination %>% filter(grepl("_YEAST", entry_name))

# human
oxidation_human <- oxidation %>% filter(grepl("_HUMAN", entry_name))
phosphorylation_human <- phosphorylation %>% filter(grepl("_HUMAN", entry_name))
deamination_human <- deamination %>% filter(grepl("_HUMAN", entry_name))
```

## For all organims for which protein half-lives were found

Inner joining the oxidation ptm df and the half-lives df.

```{r}
#| label: join
#| echo: false

# mouse
ptms_df_mouse <- rbind(oxidation_mouse, phosphorylation_mouse, deamination_mouse)
# mouse_df <- inner_join(ptms_df_mouse, half_lives_mice, by = c("UniProtID" = "Uniprot_MOUSE")) %>%
#   select(UniProtID, half_life)

mouse_df <- left_join(ptms_df_mouse, half_lives_mice, by = c("UniProtID" = "Uniprot_MOUSE")) %>%
  select(UniProtID, mean_half_life, mod_type, modified_position) %>%
  na.omit()

# yeast
ptms_df_yeast <- rbind(oxidation_yeast, phosphorylation_yeast, deamination_yeast)
# yeast_df <- inner_join(ptms_df_yeast, half_lives_yeast, by = c("UniProtID" = "Uniprot_YEAST")) %>% 
#   select(UniProtID, half_life)
yeast_df <- left_join(ptms_df_yeast, half_lives_yeast, by = c("UniProtID" = "Uniprot_YEAST")) %>%
  select(UniProtID, mean_half_life, mod_type, modified_position) %>%
  na.omit()

# human 
ptms_df_human <- rbind(oxidation_human, phosphorylation_human, deamination_human)
# human_df <- inner_join(ptms_df_human, half_lives_human, by = c("UniProtID" = "Uniprot_HUMAN")) %>%
#   select(UniProtID, half_life)

human_df <- left_join(ptms_df_human, half_lives_human, by = c("UniProtID" = "Uniprot_HUMAN")) %>%
  select(UniProtID, mean_half_life, mod_type, modified_position) %>%
  na.omit()

complete_df <- rbind(mouse_df, yeast_df, human_df)
kable(head(complete_df), align = c('c', 'c'))
```

# Visualisations

```{r}
#| label: histogram
#| echo: false
#| warning: false

ggplot(complete_df, aes(x = mean_half_life)) +
  geom_histogram(bins = 100, fill = "#91D18B", color = "black") +
  scale_x_continuous(limits = c(0, 5)) +
  labs(x = "Protein half-life (days)", y = "Protein count", title = "PTMs abundances stratified by protein half-lives") +
  theme_linedraw()
```

```{r}
#| echo: false
isolate <- complete_df %>% filter(mean_half_life > 15) %>% filter(mean_half_life < 16.5)

occurrences <- isolate %>% 
  group_by(UniProtID) %>% 
  summarise(count = n()) %>% 
  arrange(desc(count)) 
kable(head(occurrences), align = c('c', 'c'))
```

A2ASS6 TITIN_MOUSE Key component in the assembly and functioning of vertebrate striated muscles.
